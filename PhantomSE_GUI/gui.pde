/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void analog_change(GSlider source, GEvent event) { //_CODE_:analog:264346:
  println("analog - GSlider >> GEvent." + event + " @ " + millis());
  analogL2 = source.getValueI();
  if(analogL2>0) analogL2 = 0;
  analogR2 = source.getValueI();
  if(analogR2<0) analogR2 = 0;
  analogV = source.getValueI();
  analogValue.setText(""+source.getValueI());
} //_CODE_:analog:264346:

public void leftStick_change(GStick source, GEvent event) { //_CODE_:leftStick:676006:
  println("leftStick - GStick >> GEvent." + event + " @ " + millis());
  leftHatX = source.getStickX()*100 + 125;
  leftHatY = source.getStickY()*100 + 125;
  leftHatValueX.setText(""+leftHatX);
  leftHatValueY.setText(""+leftHatY);
} //_CODE_:leftStick:676006:

public void rightStick_change(GStick source, GEvent event) { //_CODE_:rightStick:553016:
  println("rightStick - GStick >> GEvent." + event + " @ " + millis());
  rightHatX = source.getStickX()*100 + 125;
  rightHatY = source.getStickY()*100 + 125;
  rightHatValueX.setText(""+rightHatX);
  rightHatValueY.setText(""+rightHatY);
} //_CODE_:rightStick:553016:

public void button1_click(GButton source, GEvent event) { //_CODE_:button1:916713:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_R1;
  print(btn_mask);
} //_CODE_:button1:916713:

public void button2_click(GButton source, GEvent event) { //_CODE_:button2:691115:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_R2;
} //_CODE_:button2:691115:

public void button3_click(GButton source, GEvent event) { //_CODE_:button3:363472:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_R3;
} //_CODE_:button3:363472:

public void button4_click(GButton source, GEvent event) { //_CODE_:button4:708022:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_L4;
} //_CODE_:button4:708022:

public void button5_click(GButton source, GEvent event) { //_CODE_:button5:277298:
  println("button5 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_L5;
} //_CODE_:button5:277298:

public void button6_click(GButton source, GEvent event) { //_CODE_:button6:740679:
  println("button6 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_L6;
} //_CODE_:button6:740679:

public void button7_click(GButton source, GEvent event) { //_CODE_:button7:369280:
  println("button7 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_RT;
} //_CODE_:button7:369280:

public void button8_click(GButton source, GEvent event) { //_CODE_:button8:958071:
  println("button8 - GButton >> GEvent." + event + " @ " + millis());
  btn_mask |= BUT_LT;
} //_CODE_:button8:958071:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  analog = new GSlider(this, 22, 13, 420, 40, 10.0);
  analog.setLimits(128, 0, 255);
  analog.setNbrTicks(21);
  analog.setStickToTicks(true);
  analog.setNumberFormat(G4P.INTEGER, 0);
  analog.setOpaque(true);
  analog.addEventHandler(this, "analog_change");
  leftHatValueX = new GLabel(this, 50, 290, 80, 20);
  leftHatValueX.setText("0");
  leftHatValueX.setOpaque(true);
  analogValue = new GLabel(this, 190, 300, 80, 20);
  analogValue.setText("0");
  analogValue.setOpaque(true);
  rightHatValueX = new GLabel(this, 330, 290, 80, 20);
  rightHatValueX.setText("0");
  rightHatValueX.setOpaque(true);
  leftHatValueY = new GLabel(this, 50, 310, 80, 20);
  leftHatValueY.setText("0");
  leftHatValueY.setOpaque(true);
  rightHatValueY = new GLabel(this, 330, 310, 80, 20);
  rightHatValueY.setText("0");
  rightHatValueY.setOpaque(true);
  label3 = new GLabel(this, 20, 290, 30, 20);
  label3.setText("X");
  label3.setOpaque(true);
  label4 = new GLabel(this, 20, 310, 30, 20);
  label4.setText("Y");
  label4.setOpaque(true);
  label5 = new GLabel(this, 410, 290, 30, 20);
  label5.setText("X");
  label5.setOpaque(true);
  label6 = new GLabel(this, 410, 310, 30, 20);
  label6.setText("Y");
  label6.setOpaque(true);
  leftStick = new GStick(this, 20, 80, 200, 200);
  leftStick.setMode(G4P.X4);
  leftStick.setOpaque(false);
  leftStick.addEventHandler(this, "leftStick_change");
  rightStick = new GStick(this, 240, 80, 200, 200);
  rightStick.setMode(G4P.X4);
  rightStick.setOpaque(false);
  rightStick.addEventHandler(this, "rightStick_change");
  button1 = new GButton(this, 30, 340, 40, 30);
  button1.setText("1");
  button1.addEventHandler(this, "button1_click");
  button2 = new GButton(this, 80, 340, 40, 30);
  button2.setText("2");
  button2.addEventHandler(this, "button2_click");
  button3 = new GButton(this, 130, 340, 40, 30);
  button3.setText("3");
  button3.addEventHandler(this, "button3_click");
  button4 = new GButton(this, 180, 340, 40, 30);
  button4.setText("4");
  button4.addEventHandler(this, "button4_click");
  button5 = new GButton(this, 230, 340, 40, 30);
  button5.setText("5");
  button5.addEventHandler(this, "button5_click");
  button6 = new GButton(this, 280, 340, 40, 30);
  button6.setText("6");
  button6.addEventHandler(this, "button6_click");
  button7 = new GButton(this, 330, 340, 40, 30);
  button7.setText("7");
  button7.addEventHandler(this, "button7_click");
  button8 = new GButton(this, 380, 340, 40, 30);
  button8.setText("8");
  button8.addEventHandler(this, "button8_click");
}

// Variable declarations 
// autogenerated do not edit
GSlider analog; 
GLabel leftHatValueX; 
GLabel analogValue; 
GLabel rightHatValueX; 
GLabel leftHatValueY; 
GLabel rightHatValueY; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GStick leftStick; 
GStick rightStick; 
GButton button1; 
GButton button2; 
GButton button3; 
GButton button4; 
GButton button5; 
GButton button6; 
GButton button7; 
GButton button8; 